{"version":3,"file":"static/js/346.de9a4ae0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import { useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => dispatch(deleteContact(id));\n\n  return (\n    <li>\n      {name}: {number}\n      <button className=\"delete-btn\" onClick={handleRemoveContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nimport './ContactList.css';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ol>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ol>\n  );\n};\n\nexport default ContactList;\n","import { setFilterValue } from '../../redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterContact = ({ target }) =>\n    dispatch(setFilterValue(target.value));\n\n  return (\n    <>\n      <p>Find contact by name</p>\n      <input type=\"text\" name=\"filter\" onChange={e => handleFilterContact(e)} />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport { addContact, fetchContacts } from '../../redux/contacts/operations';\n\nimport './ContactForm.css';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handlePushForm = e => {\n    e.preventDefault();\n\n    const form = e.target;\n\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm(form);\n  };\n\n  const resetForm = form => {\n    form.elements.name.value = '';\n    form.elements.number.value = '';\n  };\n\n  return (\n    <>\n      <form onSubmit={handlePushForm}>\n        <label>\n          <legend>Name</legend>\n          <input type=\"text\" name=\"name\" required />\n        </label>\n        <label>\n          <legend>Number</legend>\n          <input type=\"tel\" name=\"number\" required />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n      {contacts.length === 0 ? (\n        ''\n      ) : (\n        <>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContactForm;\n"],"names":["selectContacts","state","contacts","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_ref","id","number","dispatch","useDispatch","_jsxs","children","_jsx","className","onClick","deleteContact","filteredContacts","useSelector","map","ContactListItem","_Fragment","type","onChange","e","target","setFilterValue","value","handleFilterContact","useEffect","fetchContacts","resetForm","form","elements","onSubmit","preventDefault","some","alert","concat","addContact","required","length","Filter","ContactList"],"sourceRoot":""}