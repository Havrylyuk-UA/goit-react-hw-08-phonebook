{"version":3,"file":"static/js/914.86c1abb6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nimport { TiUserDelete } from 'react-icons/ti';\nimport { IconContext } from 'react-icons';\n\nimport './ContactListItem.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = () => dispatch(deleteContact(id));\n\n  return (\n    <li className=\"contact_list-item\">\n      <div className=\"contact_list-user\">\n        <p>{name}:</p>\n        <p>{number}</p>\n      </div>\n      <IconContext.Provider value={{ size: '1.5em' }}>\n        <button className=\"delete-btn\" onClick={handleRemoveContact}>\n          <TiUserDelete />\n        </button>\n      </IconContext.Provider>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nimport './ContactList.css';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className=\"contact_list-sheet\">\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { setFilterValue } from '../../redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nimport './Filter.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterContact = ({ target }) =>\n    dispatch(setFilterValue(target.value));\n\n  return (\n    <div className=\"filter_container\">\n      <p className=\"filter_name\">Find contact by name:</p>\n      <input\n        className=\"filter_input\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => handleFilterContact(e)}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport { addContact, fetchContacts } from '../../redux/contacts/operations';\n\nimport './ContactForm.css';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handlePushForm = e => {\n    e.preventDefault();\n\n    const form = e.target;\n\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts!`);\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm(form);\n  };\n\n  const resetForm = form => {\n    form.elements.name.value = '';\n    form.elements.number.value = '';\n  };\n\n  return (\n    <div className=\"contacts_page-container\">\n      <form onSubmit={handlePushForm} className=\"contact_form\">\n        <label className=\"contact_form-label\">\n          <legend className=\"contact_form-legend\">Name: </legend>\n          <input\n            className=\"contact_form-inp\"\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n        </label>\n        <label className=\"contact_form-label\">\n          <legend className=\"contact_form-legend\">Number: </legend>\n          <input\n            className=\"contact_form-inp\"\n            type=\"tel\"\n            name=\"number\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"contact_form-btn\">\n          Add contact\n        </button>\n      </form>\n      {contacts.length === 0 ? (\n        ''\n      ) : (\n        <div className=\"contacts_page-contacts-con\">\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"names":["selectContacts","state","contacts","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","_ref","id","number","dispatch","useDispatch","_jsxs","className","children","_jsx","IconContext","value","size","onClick","deleteContact","TiUserDelete","filteredContacts","useSelector","map","ContactListItem","type","onChange","e","target","setFilterValue","handleFilterContact","useEffect","fetchContacts","resetForm","form","elements","onSubmit","preventDefault","some","alert","concat","addContact","required","length","Filter","ContactList"],"sourceRoot":""}