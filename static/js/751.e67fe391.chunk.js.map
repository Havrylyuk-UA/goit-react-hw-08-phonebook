{"version":3,"file":"static/js/751.e67fe391.chunk.js","mappings":"uQAEMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAuEZ,EApEqB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACtBC,GAAwBC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIR,IAAgBS,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/CK,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdd,EAA+Bc,EAA/Bd,KAAMe,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EAEjDJ,GAAOJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACJG,GAAI,IAAAS,EAAAA,EAAAA,GAAA,GACNnB,EAAOkB,IAEZ,EAQME,EAAQ,WACZT,GAAOJ,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GACf,EAEMsB,GAASC,EAAAA,EAAAA,SACTC,GAAUD,EAAAA,EAAAA,SACVE,GAAaF,EAAAA,EAAAA,SAEXtB,EAA0BU,EAA1BV,KAAMC,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAErB,OACEuB,EAAAA,EAAAA,MAAA,QAAMrB,SAjBa,SAAAsB,GACnBA,EAAEC,iBACFvB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,IACdU,GACF,EAa+BQ,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAST,EAAOO,SAAC,WACxBC,EAAAA,EAAAA,KAAA,SACEd,MAAOf,EACP+B,SAAUnB,EACVZ,KAAK,OACLgC,GAAIX,EACJY,UAAQ,QAGZR,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASP,EAAQK,SAAC,YACzBC,EAAAA,EAAAA,KAAA,SACEd,MAAOd,EACP8B,SAAUnB,EACVI,KAAK,QACLhB,KAAK,QACLgC,GAAIT,EACJU,UAAQ,QAGZR,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASN,EAAWI,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,SACEd,MAAOb,EACP6B,SAAUnB,EACVI,KAAK,WACLhB,KAAK,WACLgC,GAAIR,EACJS,UAAQ,QAGZJ,EAAAA,EAAAA,KAAA,UAAQb,KAAK,SAAQY,SAAC,eAG5B,EC9CA,EApBqB,WACnB,IAAMM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAIjB,OACEf,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAb,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHM,IAAeL,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACnBC,EAAAA,EAAAA,KAACa,EAAY,CAACtC,SANG,SAAAuC,GAAO,OAAIJ,GAASK,EAAAA,EAAAA,IAAOD,GAAU,IAOrDN,IACCR,EAAAA,EAAAA,KAAA,KAAGgB,MAAO,CAAEC,MAAO,MAAOC,UAAW,UAAWnB,SAAES,MAI1D,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useId, useState } from 'react';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [user, setUser] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setUser({\n      ...user,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...user });\n    reset();\n  };\n\n  const reset = () => {\n    setUser({ ...INITIAL_STATE });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = user;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={nameId}>Name:</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          id={nameId}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor={emailId}>Email:</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor={passwordId}>Password:</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAuthError,\n  selectAuthLoading,\n} from '../redux/auth/auth-selectors';\nimport { signup } from '../redux/auth/auth-operations';\nimport RegisterForm from '../components//RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n\n  const handleSignup = newUser => dispatch(signup(newUser));\n\n  return (\n    <>\n      <h1>Please Sign Up</h1>\n      {authLoading && <p>....Register in progress</p>}\n      <RegisterForm onSubmit={handleSignup} />\n      {authError && (\n        <p style={{ color: 'red', textAlign: 'center' }}>{authError}</p>\n      )}\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","user","setUser","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","e","preventDefault","children","_jsx","htmlFor","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","_Fragment","RegisterForm","newUser","signup","style","color","textAlign"],"sourceRoot":""}